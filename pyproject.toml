[project]
authors = [
    {name = "Illia Troshchynskyi"},
]
name = "fastapi-example"
version = "0.1.0"
description = ""
readme = "README.md"

requires-python = "<4.0,>=3.12"

dependencies = [
    "fastapi[standard]<1.0.0,>=0.115.6",
    "pydantic-settings<3.0.0,>=2.7.1",
    "psycopg[binary]>=3.2.4,<4.0.0",
    "alembic<2.0.0,>=1.14.0",
    "python-multipart<1.0.0,>=0.0.20",
    "fastapi-pagination<1.0.0,>=0.12.34",
    "aiobotocore==2.11.0",
    "types-aiobotocore[s3]<3.0.0,>=2.19.0",
    "faststream[rabbit]>=0.5.48",
]

[dependency-groups]
dev = [
    "pre-commit<5.0.0,>=4.0.1",
    "coverage<8.0.0,>=7.6.10",
    "pytest<9.0.0,>=8.3.4",
    "pytest-mock<4.0.0,>=3.14.0",
    "pytest-httpx<1.0.0,>=0.35.0",
    "polyfactory<3.0.0,>=2.18.1",
    "ruff<1.0.0,>=0.9.2",
    "testcontainers<5.0.0,>=4.9.1",
    "minio<8.0.0,>=7.2.15",
    "mypy>=1.8.0,<2.0.0",
    "lxml>=6.0.1",
    "pytest-asyncio>=1.1.0",
]


[tool.pytest.ini_options]
asyncio_mode = "auto"
#asyncio_default_fixture_loop_scope = "session"


[tool.ruff]
line-length = 120
target-version = "py312"
exclude = [".venv"]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"

[tool.ruff.lint]
select = [
    "E", # Errors
    "F", # Pyflakes
    "I", # isort
    "T20", # flake8-print
]
pydocstyle.convention = 'google'

[tool.ruff.lint.isort]
known-local-folder = ["tests", "app", "scripts"]
split-on-trailing-comma = true
combine-as-imports = true
case-sensitive = false
detect-same-package = true
order-by-type = false  # Sorting of all imported objects (functions, classes, etc.) regardless of their type
force-sort-within-sections = true  # Don't sort straight-style imports before from-style imports.

[tool.mypy]
# Basic configuration
python_version = "3.12"  # Target Python version for type checking
#platform = "linux"      # Target platform for type checking

# Files and modules to check
files = ["app", "tests"]  # Check your application code and tests
exclude = [
    "migrations/",        # Exclude alembic migrations (auto-generated)
    ".venv/",            # Exclude virtual environment
    "__pycache__/",      # Exclude Python cache files
]

# Import discovery
#mypy_path = "app"        # Additional paths for module resolution
namespace_packages = true # Support PEP 420 namespace packages

# Type checking strictness levels - Good balance for development
strict = true           # Don't use strict mode initially

# Core type checking options - Focus on your code quality
check_untyped_defs = true       # Check function bodies in untyped functions
disallow_any_generics = false   # Allow generic types without parameters (gradual)
disallow_incomplete_defs = true # Require complete function type annotations
disallow_subclassing_any = false # Allow subclassing Any for flexibility
disallow_untyped_calls = true  # Allow calling library functions without types
disallow_untyped_decorators = false # Allow untyped decorators (FastAPI, etc.)
disallow_untyped_defs = true    # Require function type annotations in your code
no_implicit_optional = true     # Don't assume arguments with default None are Optional
no_implicit_reexport = false    # Allow implicit re-exports for flexibility
strict_equality = true         # Allow equality checks between different types
warn_redundant_casts = true     # Warn about redundant type casts
warn_return_any = false         # Don't warn about functions returning Any (gradual)
warn_unused_ignores = true      # Warn about unused # type: ignore comments

disallow_any_explicit = true # Prevents using Any in generics like list[Any]
allow_redefinition = false # Experimental: ensures consistent function signatures across overrides
# Catch accidental variable shadowing
local_partial_types = true

# Error output configuration
show_error_codes = true         # Show error codes in output (e.g., [no-untyped-def])
show_column_numbers = true      # Show column numbers in error messages
show_error_context = true       # Show source code context for errors
color_output = true             # Use colors in terminal output
error_summary = true            # Show error summary at the end
pretty = true                   # Use pretty-printed error messages

# Cache configuration
cache_dir = ".mypy_cache"       # Directory for mypy cache files
sqlite_cache = true             # Use SQLite for caching (faster than file-based cache)
incremental = true              # Enable incremental type checking

# Import handling - Completely ignore all third-party libraries
ignore_missing_imports = true   # Ignore missing imports from any library. Donâ€™t dive into 3rd-party libs. You type-check your code only.
follow_imports = "skip"         # SKIP following imports to libraries - only check YOUR code
follow_imports_for_stubs = false # Don't follow imports in stub files

# Warnings configuration
warn_no_return = true           # Warn about functions that don't return a value
warn_unreachable = true         # Warn about unreachable code

# Configuration for migration files (ignore completely)
[[tool.mypy.overrides]]
module = "migrations.*"
ignore_errors = true            # Ignore all errors in migration files

# Configuration for test files (require type annotations)
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = true    # Require type annotations for test functions
disallow_incomplete_defs = true # Require complete type annotations in tests
ignore_missing_imports = true   # Ignore missing imports in tests
